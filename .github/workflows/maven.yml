# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and Allure
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      browserName:
        description: 'Browser type'
        required: false
        type: string
        default: 'chrome'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Run Tests and Generate Allure Results
      run: |
        cd DemoAutomationProject
        mvn clean test
    
    - name: Upload Allure Results
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: DemoAutomationProject/target/allure-results/
        
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      with:
        allure_results: DemoAutomationProject/target/allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ github.token }}
        publish_dir: allure-report
